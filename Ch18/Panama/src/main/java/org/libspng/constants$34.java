// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$34 {

    static final FunctionDescriptor tmpfile$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle tmpfile$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "tmpfile",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$34.tmpfile$FUNC, false
    );
    static final FunctionDescriptor tmpnam$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle tmpnam$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "tmpnam",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$34.tmpnam$FUNC, false
    );
    static final FunctionDescriptor ungetc$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle ungetc$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ungetc",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$34.ungetc$FUNC, false
    );
    static final FunctionDescriptor vfprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle vfprintf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "vfprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$34.vfprintf$FUNC, false
    );
    static final FunctionDescriptor vprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle vprintf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "vprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$34.vprintf$FUNC, false
    );
    static final FunctionDescriptor vsprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle vsprintf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "vsprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$34.vsprintf$FUNC, false
    );
}


