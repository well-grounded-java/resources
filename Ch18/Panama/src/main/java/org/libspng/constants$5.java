// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$5 {

    static final FunctionDescriptor abs$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle abs$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "abs",
        "(I)I",
        constants$5.abs$FUNC, false
    );
    static final FunctionDescriptor atexit$x0$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle atexit$x0$MH = RuntimeHelper.downcallHandle(
        "()V",
        constants$5.atexit$x0$FUNC, false
    );
    static final FunctionDescriptor atexit$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle atexit$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "atexit",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$5.atexit$FUNC, false
    );
    static final FunctionDescriptor atof$FUNC = FunctionDescriptor.of(C_DOUBLE,
        C_POINTER
    );
    static final MethodHandle atof$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "atof",
        "(Ljdk/incubator/foreign/MemoryAddress;)D",
        constants$5.atof$FUNC, false
    );
    static final FunctionDescriptor atoi$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle atoi$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "atoi",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$5.atoi$FUNC, false
    );
}


