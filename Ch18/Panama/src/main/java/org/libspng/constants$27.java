// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$27 {

    static final MemoryLayout suboptarg$LAYOUT = C_POINTER;
    static final VarHandle suboptarg$VH = MemoryHandles.asAddressVarHandle(constants$27.suboptarg$LAYOUT.varHandle(long.class));
    static final MemorySegment suboptarg$SEGMENT = RuntimeHelper.lookupGlobalVariable(spng_h.LIBRARIES, "suboptarg", constants$27.suboptarg$LAYOUT);
    static final FunctionDescriptor renameat$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle renameat$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "renameat",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$27.renameat$FUNC, false
    );
    static final FunctionDescriptor renamex_np$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle renamex_np$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "renamex_np",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$27.renamex_np$FUNC, false
    );
    static final FunctionDescriptor renameatx_np$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle renameatx_np$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "renameatx_np",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$27.renameatx_np$FUNC, false
    );
    static final MemoryLayout __stdinp$LAYOUT = C_POINTER;
    static final VarHandle __stdinp$VH = MemoryHandles.asAddressVarHandle(constants$27.__stdinp$LAYOUT.varHandle(long.class));
    static final MemorySegment __stdinp$SEGMENT = RuntimeHelper.lookupGlobalVariable(spng_h.LIBRARIES, "__stdinp", constants$27.__stdinp$LAYOUT);
    static final MemoryLayout __stdoutp$LAYOUT = C_POINTER;
    static final VarHandle __stdoutp$VH = MemoryHandles.asAddressVarHandle(constants$27.__stdoutp$LAYOUT.varHandle(long.class));
    static final MemorySegment __stdoutp$SEGMENT = RuntimeHelper.lookupGlobalVariable(spng_h.LIBRARIES, "__stdoutp", constants$27.__stdoutp$LAYOUT);
}


