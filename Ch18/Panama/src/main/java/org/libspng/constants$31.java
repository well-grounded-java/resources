// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$31 {

    static final FunctionDescriptor ftell$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle ftell$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ftell",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$31.ftell$FUNC, false
    );
    static final FunctionDescriptor fwrite$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle fwrite$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fwrite",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)J",
        constants$31.fwrite$FUNC, false
    );
    static final FunctionDescriptor getc$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle getc$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "getc",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$31.getc$FUNC, false
    );
    static final FunctionDescriptor getchar$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getchar$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "getchar",
        "()I",
        constants$31.getchar$FUNC, false
    );
    static final FunctionDescriptor gets$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle gets$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "gets",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$31.gets$FUNC, false
    );
    static final FunctionDescriptor perror$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle perror$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "perror",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$31.perror$FUNC, false
    );
}


