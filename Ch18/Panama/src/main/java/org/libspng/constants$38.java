// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$38 {

    static final FunctionDescriptor tempnam$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle tempnam$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "tempnam",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$38.tempnam$FUNC, false
    );
    static final FunctionDescriptor fseeko$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_INT
    );
    static final MethodHandle fseeko$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fseeko",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$38.fseeko$FUNC, false
    );
    static final FunctionDescriptor ftello$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle ftello$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ftello",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$38.ftello$FUNC, false
    );
    static final FunctionDescriptor snprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle snprintf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "snprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$38.snprintf$FUNC, true
    );
    static final FunctionDescriptor vfscanf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle vfscanf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "vfscanf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$38.vfscanf$FUNC, false
    );
    static final FunctionDescriptor vscanf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle vscanf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "vscanf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$38.vscanf$FUNC, false
    );
}


