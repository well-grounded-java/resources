// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$14 {

    static final FunctionDescriptor ptsname$FUNC = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    static final MethodHandle ptsname$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ptsname",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$14.ptsname$FUNC, false
    );
    static final FunctionDescriptor ptsname_r$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle ptsname_r$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ptsname_r",
        "(ILjdk/incubator/foreign/MemoryAddress;J)I",
        constants$14.ptsname_r$FUNC, false
    );
    static final FunctionDescriptor putenv$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle putenv$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "putenv",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$14.putenv$FUNC, false
    );
    static final FunctionDescriptor random$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle random$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "random",
        "()J",
        constants$14.random$FUNC, false
    );
    static final FunctionDescriptor rand_r$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle rand_r$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "rand_r",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$14.rand_r$FUNC, false
    );
    static final FunctionDescriptor realpath$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle realpath$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "realpath",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$14.realpath$FUNC, false
    );
}


