// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$36 {

    static final FunctionDescriptor __svfscanf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle __svfscanf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "__svfscanf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$36.__svfscanf$FUNC, false
    );
    static final FunctionDescriptor __swbuf$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle __swbuf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "__swbuf",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$36.__swbuf$FUNC, false
    );
    static final FunctionDescriptor __sputc$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle __sputc$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "__sputc",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$36.__sputc$FUNC, false
    );
    static final FunctionDescriptor flockfile$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle flockfile$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "flockfile",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$36.flockfile$FUNC, false
    );
    static final FunctionDescriptor ftrylockfile$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ftrylockfile$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ftrylockfile",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$36.ftrylockfile$FUNC, false
    );
    static final FunctionDescriptor funlockfile$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle funlockfile$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "funlockfile",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$36.funlockfile$FUNC, false
    );
}


