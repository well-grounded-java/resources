// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$32 {

    static final FunctionDescriptor printf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle printf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "printf",
        "(Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$32.printf$FUNC, true
    );
    static final FunctionDescriptor putc$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle putc$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "putc",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$32.putc$FUNC, false
    );
    static final FunctionDescriptor putchar$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle putchar$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "putchar",
        "(I)I",
        constants$32.putchar$FUNC, false
    );
    static final FunctionDescriptor puts$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle puts$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "puts",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$32.puts$FUNC, false
    );
    static final FunctionDescriptor remove$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle remove$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "remove",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$32.remove$FUNC, false
    );
    static final FunctionDescriptor rename$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle rename$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "rename",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$32.rename$FUNC, false
    );
}


