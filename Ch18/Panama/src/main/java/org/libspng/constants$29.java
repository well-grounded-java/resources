// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$29 {

    static final FunctionDescriptor fgetc$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fgetc$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fgetc",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$29.fgetc$FUNC, false
    );
    static final FunctionDescriptor fgetpos$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fgetpos$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fgetpos",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$29.fgetpos$FUNC, false
    );
    static final FunctionDescriptor fgets$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fgets$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fgets",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$29.fgets$FUNC, false
    );
    static final FunctionDescriptor fopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fopen$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fopen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$29.fopen$FUNC, false
    );
    static final FunctionDescriptor fprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fprintf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$29.fprintf$FUNC, true
    );
    static final FunctionDescriptor fputc$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fputc$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fputc",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$29.fputc$FUNC, false
    );
}


