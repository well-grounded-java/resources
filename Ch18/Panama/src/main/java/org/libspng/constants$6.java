// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$6 {

    static final FunctionDescriptor atol$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle atol$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "atol",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$6.atol$FUNC, false
    );
    static final FunctionDescriptor atoll$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle atoll$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "atoll",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$6.atoll$FUNC, false
    );
    static final FunctionDescriptor bsearch$__compar$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle bsearch$__compar$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$6.bsearch$__compar$FUNC, false
    );
    static final FunctionDescriptor bsearch$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle bsearch$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "bsearch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$6.bsearch$FUNC, false
    );
    static final FunctionDescriptor div$FUNC = FunctionDescriptor.of(MemoryLayout.structLayout(
        C_INT.withName("quot"),
        C_INT.withName("rem")
    ),
        C_INT,
        C_INT
    );
    static final MethodHandle div$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "div",
        "(II)Ljdk/incubator/foreign/MemorySegment;",
        constants$6.div$FUNC, false
    );
}


