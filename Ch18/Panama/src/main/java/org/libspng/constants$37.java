// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$37 {

    static final FunctionDescriptor getc_unlocked$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle getc_unlocked$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "getc_unlocked",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$37.getc_unlocked$FUNC, false
    );
    static final FunctionDescriptor getchar_unlocked$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle getchar_unlocked$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "getchar_unlocked",
        "()I",
        constants$37.getchar_unlocked$FUNC, false
    );
    static final FunctionDescriptor putc_unlocked$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle putc_unlocked$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "putc_unlocked",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$37.putc_unlocked$FUNC, false
    );
    static final FunctionDescriptor putchar_unlocked$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle putchar_unlocked$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "putchar_unlocked",
        "(I)I",
        constants$37.putchar_unlocked$FUNC, false
    );
    static final FunctionDescriptor getw$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle getw$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "getw",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$37.getw$FUNC, false
    );
    static final FunctionDescriptor putw$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle putw$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "putw",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$37.putw$FUNC, false
    );
}


