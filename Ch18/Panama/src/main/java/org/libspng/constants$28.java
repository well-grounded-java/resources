// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$28 {

    static final MemoryLayout __stderrp$LAYOUT = C_POINTER;
    static final VarHandle __stderrp$VH = MemoryHandles.asAddressVarHandle(constants$28.__stderrp$LAYOUT.varHandle(long.class));
    static final MemorySegment __stderrp$SEGMENT = RuntimeHelper.lookupGlobalVariable(spng_h.LIBRARIES, "__stderrp", constants$28.__stderrp$LAYOUT);
    static final FunctionDescriptor clearerr$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle clearerr$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "clearerr",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$28.clearerr$FUNC, false
    );
    static final FunctionDescriptor fclose$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fclose$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fclose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$28.fclose$FUNC, false
    );
    static final FunctionDescriptor feof$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle feof$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "feof",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$28.feof$FUNC, false
    );
    static final FunctionDescriptor ferror$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ferror$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ferror",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$28.ferror$FUNC, false
    );
    static final FunctionDescriptor fflush$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fflush$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fflush",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$28.fflush$FUNC, false
    );
}


