// Generated by jextract

package org.libspng;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$40 {

    static final FunctionDescriptor fmemopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle fmemopen$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fmemopen",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$40.fmemopen$FUNC, false
    );
    static final FunctionDescriptor open_memstream$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle open_memstream$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "open_memstream",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$40.open_memstream$FUNC, false
    );
    static final MemoryLayout sys_nerr$LAYOUT = C_INT;
    static final VarHandle sys_nerr$VH = constants$40.sys_nerr$LAYOUT.varHandle(int.class);
    static final MemorySegment sys_nerr$SEGMENT = RuntimeHelper.lookupGlobalVariable(spng_h.LIBRARIES, "sys_nerr", constants$40.sys_nerr$LAYOUT);
    static final FunctionDescriptor asprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle asprintf$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "asprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$40.asprintf$FUNC, true
    );
    static final FunctionDescriptor ctermid_r$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle ctermid_r$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "ctermid_r",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$40.ctermid_r$FUNC, false
    );
    static final FunctionDescriptor fgetln$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fgetln$MH = RuntimeHelper.downcallHandle(
        spng_h.LIBRARIES, "fgetln",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$40.fgetln$FUNC, false
    );
}


